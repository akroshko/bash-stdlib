#!/bin/bash
# bash_completion_common is a set of useful bash completion functions.
#
# Copyright (C) 2015-2019, Andrew Kroshko, all rights reserved.
#
# Author: Andrew Kroshko
# Maintainer: Andrew Kroshko <akroshko.public+devel@gmail.com>
# Created: Sat Jan 30, 2015
# Version: 20190408
# URL: https://github.com/akroshko/cic-bash-common
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see http://www.gnu.org/licenses/.

# https://www.debian-administration.org/article/317/An_introduction_to_bash_completion_part_2

source /etc/bash_completion

_bash_functions () {
    COMPREPLY=(IFS=$(echo -en "\n\b") $(compgen -A function | grep -- "${COMP_WORDS[COMP_CWORD]}") )
}

_apt_all_packages () {
    COMPREPLY=(IFS=$(echo -en "\n\b") $(apt-cache search "${COMP_WORDS[COMP_CWORD]}" | cut -d' ' -f1 | grep -- "${COMP_WORDS[COMP_CWORD]}") )

}

_apt_installed_packages () {

    COMPREPLY=( $(dpkg-query -l | cut -d' ' -f3 | grep -- "${COMP_WORDS[COMP_CWORD]}") )
}

_screen_sockets () {
    # TODO: only want for first argument, not others after
    COMPREPLY=(IFS=$(echo -en "\n\b") $(screen -ls | grep -- "^[[:space:]]\+[0-9]\+" | cut -f1 -d"." | sed -e 's/^[[:space:]]*//g' | grep -- "${COMP_WORDS[COMP_CWORD]}") )
}

function _apt_get_install {
    ((COMP_CWORD+=1))
    COMP_WORDS=( apt-get install ${COMP_WORDS[@]:1} )
    # TODO: use printf...
    #       https://superuser.com/questions/461981/how-do-i-convert-a-bash-array-variable-to-a-string-delimited-with-newlines
    COMP_LINE=$(IFS=" " echo "${COMP_WORDS[*]}" )
    COMP_POINT=${#COMP_LINE}
    _apt_get
}

function _apt_get_remove {
    ((COMP_CWORD+=1))
    COMP_WORDS=( apt-get remove ${COMP_WORDS[@]:1} )
    # TODO: use printf...
    #       https://superuser.com/questions/461981/how-do-i-convert-a-bash-array-variable-to-a-string-delimited-with-newlines
    COMP_LINE=$(IFS=" " echo "${COMP_WORDS[*]}" )
    COMP_POINT=${#COMP_LINE}
    _apt_get
}

function _apt_cache_show {
    ((COMP_CWORD+=1))
    COMP_WORDS=( apt-cache show ${COMP_WORDS[@]:1} )
    # TODO: use printf...
    #       https://superuser.com/questions/461981/how-do-i-convert-a-bash-array-variable-to-a-string-delimited-with-newlines
    COMP_LINE=$(IFS=" " echo "${COMP_WORDS[*]}" )
    COMP_POINT=${#COMP_LINE}
    _apt_cache
}

function _dpkg_l {
    ((COMP_CWORD+=1))
    COMP_WORDS=( dpkgquery -L ${COMP_WORDS[@]:1} )
    COMP_LINE=$(IFS=" " echo "${COMP_WORDS[*]}" )
    COMP_POINT=${#COMP_LINE}
    _dpkg
}

complete -F _bash_functions         view-def
_completion_loader apt-get
_completion_loader apt-cache
_completion_loader dpkg
complete -F _dpkg_l                 ag-list
complete -F _apt_get_remove         ag-remove
# TODO: this is a wierdly behaving alias... no completion for now
# complete -F _apt_installed_packages ag-show-installed
complete -F _apt_cache_show         ag-show
complete -F _apt_get_install        ag-install
complete -F _screen_sockets         scr
